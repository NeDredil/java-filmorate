
CREATE TABLE IF NOT EXISTS films (
        film_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        titel varchar(100) NOT NULL,
        description varchar(200) NOT NULL,
        releaseDate date NOT NULL,
        duration int NOT NULL,
        rating_id int
);

CREATE TABLE IF NOT EXISTS rating (
        rating_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        rating_name varchar(10)
);

ALTER TABLE films ADD CONSTRAINT fk_rating FOREIGN KEY (rating_id) REFERENCES rating(rating_id);

CREATE TABLE IF NOT EXISTS genre (
        genre_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        genre_name varchar(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS film_genre (
        film_id int REFERENCES films(film_id) ON DELETE CASCADE,
        genre_id int REFERENCES genre(genre_id)
);

CREATE TABLE IF NOT EXISTS users (
        user_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        email varchar(100) NOT NULL,
        login varchar(100) NOT NULL,
        name varchar(100) NOT NULL,
        birthday date NOT NULL
);

CREATE TABLE IF NOT EXISTS likes (
        film_id int REFERENCES films(film_id) ON DELETE CASCADE,
        user_id int REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS friends (
        user_id int REFERENCES users(user_id) ON DELETE CASCADE,
        other_user_id int REFERENCES users(user_id) ON DELETE CASCADE
);
